@*

*@
@using WorkReport.Commons.Extensions
@using WorkReport.Interface.IService;
@using WorkReport.Repositories.Models
@inject ISFieldContentService _iSFieldContentService
@{
    Layout = "/Views/Shared/_LayoutEdit.cshtml";
    var sFieldContentList = _iSFieldContentService.GetSFieldContent("MenuType");
}
<link rel="stylesheet" href="~/js/lay-module/layui_exts/cascader/layCascader.css" />

<form class="layui-form" lay-filter="example" style="margin-right:20px">

    <input type="hidden" id="ID" name="ID" placeholder="请输入" class="layui-input">

    <div class="layui-form-item">
        <label class="layui-form-label">名称：</label>
        <div class="layui-input-block">
            <input type="text" name="Name" lay-verify="required" autocomplete="off" placeholder="请输入" class="layui-input">
        </div>
    </div>


    <div class="layui-form-item">
        <label class="layui-form-label">所属目录：</label>
        <div class="layui-input-block">
            <input name="PID" id="demo2">
        </div>
    </div>

    <div class="layui-form-item">
        <label class="layui-form-label">图标：</label>
        <div class="layui-input-block">
            <input type="text" id="Icon" name="Icon" lay-filter="Icon" class="hide" value="">
        </div>
    </div>

    <div class="layui-form-item">
        <label class="layui-form-label required">target属性：</label>
        <div class="layui-input-block">
            <input type="radio" name="target" value="_self" title="_self">
            <input type="radio" name="target" value="_blank" title="_blank">
            <input type="radio" name="target" value="_parent" title="_parent">
            <input type="radio" name="target" value="_top" title="_top">
        </div>
    </div>

    <div class="layui-form-item">
        <label class="layui-form-label">地址：</label>
        <div class="layui-input-block">
            <input type="text" name="Url" lay-verify="" autocomplete="off" placeholder="请输入" class="layui-input">
        </div>
    </div>

    <div class="layui-form-item">
        <label class="layui-form-label">类型：</label>
        <div class="layui-input-block">
            @*<input type="text" name="MenuType" lay-verify="required" autocomplete="off" placeholder="请输入" class="layui-input">*@            
                <select name="MenuType" lay-verify="required" lay-search="">
                    <option value="">直接选择或搜索选择</option>
                    @foreach (var item in sFieldContentList)
                    {
                        <option value="@item.Code">@item.CodeContent</option>
                    }
                </select>
        </div>
    </div>

    <div class="layui-form-item">
        <label class="layui-form-label">排序：</label>
        <div class="layui-input-block">
            <input type="text" name="Sort" lay-verify="" autocomplete="off" placeholder="请输入" class="layui-input">
        </div>
    </div>

    <div class="layui-form-item">
        <div class="layui-input-block">
            <button type="submit" class="layui-btn" lay-submit="" lay-filter="ok">立即提交</button>
            <button type="reset" class="layui-btn layui-btn-primary">重置</button>
        </div>
    </div>
</form>

@section Scripts{
    <script type="text/javascript">

        function init() {
            layui.use(['iconPickerFa', 'form', 'layCascader'], function() {
                var form = layui.form
                    , iconPickerFa = layui.iconPickerFa
                    , layCascader = layui.layCascader;

                form.on('submit(ok)', function(data) {
                    console.log(data);
                    $.ajax({
                        url: "/SMenu/SaveSMenu",
                        dataType: 'json',
                        async: false,
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(data.field),
                        method: "post",
                        success: function(response) {
                            if (response.Code == 200) {
                                var index = parent.layer.getFrameIndex(window.name);//获取窗口索引
                                parent.layer.close(index);//关闭弹出层
                            } else {
                                layer.msg("数据保存失败");
                                return;
                            }
                        },
                        error: function() {
                            layer.msg("数据保存失败");
                            return;
                        }
                    });
                    return false;
                });

                iconPickerFa.render({
                    // 选择器，推荐使用input
                    elem: '#Icon',
                    // fa 图标接口
                    url: "/lib/font-awesome-4.7.0/less/variables.less?v=2",
                    // 是否开启搜索：true/false，默认true
                    search: true,
                    // 是否开启分页：true/false，默认true
                    page: true,
                    // 每页显示数量，默认12
                    limit: 16,
                    // 点击回调
                    click: function(data) {
                        $('#Icon').val('fa ' + data.icon);
                        //console.log(data);
                    },
                    // 渲染成功后的回调
                    success: function(d) {
                        //console.log(d);
                    }
                });

                var treeMenu = _menu;
                //treeMenu.push({"value":0,"label":"顶级菜单"});
                treeMenu.unshift({"value":"0","label":"顶级菜单"});
                treeMenu = JSON.parse(JSON.stringify(treeMenu).replace(/id/g, 'value'));
                treeMenu = JSON.parse(JSON.stringify(treeMenu).replace(/title/g, 'label'));
                treeMenu = JSON.parse(JSON.stringify(treeMenu).replace(/child/g, 'children'));
                var cascader = layCascader({
                    elem: '#demo2',
                    clearable: true,
                    options: treeMenu,
                    props: {
                        checkStrictly: true
                    }
                });

                cascader.setValue(_result.PID);
                /**
                * 选中图标 （常用于更新时默认选中图标）
                */
                iconPickerFa.checkIcon('Icon', _result.Icon);
                if (_data && _data.hasOwnProperty('ID')) {
                    form.val('example', {
                        "ID": _result.ID
                        , "Name": _result.Name
                        , "MenuType": _result.MenuType
                        , "target": _result.Target
                        , "Url": _result.Url
                        , "Sort": _result.Sort
                    });
                }
            });

        }
        var _result;
        var _menu;
        var _data;
        function SetData(data) {
            _data = data;
            //加载菜单
            $.ajax({
                url: "/SMenu/GetSMenuList",
                data: {},
                method: "GET",
                async: false,
                success: function(result) {
                    _menu = result;
                }
            });

            if (data && _data.hasOwnProperty('ID')) {   //加载修改数据
                $.ajax({
                    url: "/SMenu/GetSMenuByID/" + data.ID,
                    data: { ID: data.ID },
                    method: "GET",
                    async: false,
                    success: function(result) {
                        _result = result;
                    }
                });
            }
            init();
        }
    </script>
}